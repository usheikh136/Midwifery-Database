(c) Copyright IBM Corporation 1993,2007
Command Line Processor for DB2 Client 11.5.4.0

You can issue database manager commands and SQL statements from the command 
prompt. For example:
    db2 => connect to sample
    db2 => bind sample.bnd

For general help, type: ?.
For command help, type: ? command, where command can be
the first few keywords of a database manager command. For example:
 ? CATALOG DATABASE for help on the CATALOG DATABASE command
 ? CATALOG          for help on all of the CATALOG commands.

To exit db2 interactive mode, type QUIT at the command prompt. Outside 
interactive mode, all commands must be prefixed with 'db2'.
To list the current command option settings, type LIST COMMAND OPTIONS.

For more detailed help, refer to the Online Reference Manual.

db2 => db2 => db2 => db2 => db2 => CONNECT TO cs421

   Database Connection Information

 Database server        = DB2/LINUXX8664 11.5.4.0
 SQL authorization ID   = UHAMEE1
 Local database alias   = CS421


db2 => db2 => db2 => db2 => db2 => db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE BirthingInstitution ( Email VARCHAR(50) NOT NULL ,Name VARCHAR(50) NOT NULL ,Address VARCHAR(50) NOT NULL ,Website VARCHAR(50) ,PhoneNumber VARCHAR(50) NOT NULL ,PRIMARY KEY(Email) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE BirthingCentre ( InstitutionEmail VARCHAR(50) NOT NULL ,PRIMARY KEY(InstitutionEmail) ,FOREIGN KEY(InstitutionEmail) REFERENCES BirthingInstitution(email) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE CommunityClinic ( InstitutionEmail VARCHAR(50) NOT NULL ,PRIMARY KEY(InstitutionEmail) ,FOREIGN KEY(InstitutionEmail) REFERENCES BirthingInstitution(email) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Midwife ( PractitionerID INT NOT NULL ,Name VARCHAR(50) NOT NULL ,Email VARCHAR(50) UNIQUE NOT NULL ,PhoneNumber VARCHAR(50) NOT NULL ,InstitutionEmail VARCHAR(50) NOT NULL ,PRIMARY KEY(PractitionerID) ,FOREIGN KEY(InstitutionEmail) REFERENCES BirthingInstitution(Email) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE InformationSession ( SessionID INT NOT NULL ,PractitionerID INT NOT NULL ,Language VARCHAR(50) NOT NULL ,Time TIME NOT NULL ,Date DATE NOT NULL ,PRIMARY KEY(SessionID) ,FOREIGN KEY(PractitionerID) REFERENCES Midwife(PractitionerID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Patient ( PatientID INT NOT NULL ,Blood_Type VARCHAR(3) ,PRIMARY KEY(PatientID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Mother ( PatientID INT NOT NULL ,Name VARCHAR(50) NOT NULL ,Address VARCHAR(50) NOT NULL ,PhoneNumber VARCHAR(50) NOT NULL ,HealthCardNum VARCHAR(15) UNIQUE NOT NULL ,Email VARCHAR(50) NOT NULL ,DOB DATE NOT NULL ,PRIMARY KEY(PatientID) ,FOREIGN KEY(PatientID) REFERENCES Patient(PatientID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Father ( FatherID INT NOT NULL ,Name VARCHAR(50) NOT NULL ,BloodType VARCHAR(50) ,Address VARCHAR(50) ,Email VARCHAR(50) ,DOB DATE NOT NULL ,HealthCardNum VARCHAR(15) UNIQUE NOT NULL ,PhoneNumber VARCHAR(50) NOT NULL ,Profession VARCHAR(50) NOT NULL ,PRIMARY KEY(FatherID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Parents ( ParentsID INT NOT NULL ,MotherID INT NOT NULL ,FatherID INT ,PRIMARY KEY(ParentsID) ,FOREIGN KEY(MotherID) REFERENCES Patient(PatientID) ,FOREIGN KEY(FatherID) REFERENCES Father(FatherID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE ISRegistrants ( ParentsID INT NOT NULL ,SessionID INT NOT NULL ,Attended VARCHAR(3) ,PRIMARY KEY(ParentsID,SessionID) ,FOREIGN KEY(ParentsID) REFERENCES Parents(ParentsID) ,FOREIGN KEY(SessionID) REFERENCES InformationSession(SessionID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Pregnancy ( PregnancyID INT NOT NULL ,PregnancyNumber INT NOT NULL ,MenstrualDD DATE ,DatingUltraDD DATE ,ExpectedBirth DATE NOT NULL ,FinalDue DATE ,PrimaryMidwifeID INT NOT NULL ,BackupMidwifeID INT NOT NULL ,ParentsID INT NOT NULL ,InstitutionEmail VARCHAR(50) NOT NULL ,PRIMARY KEY(PregnancyID) ,FOREIGN KEY(PrimaryMidwifeID) REFERENCES Midwife(PractitionerID) ,FOREIGN KEY(BackupMidwifeID) REFERENCES Midwife(PractitionerID) ,FOREIGN KEY(ParentsID) REFERENCES Parents(ParentsID) ,FOREIGN KEY(InstitutionEmail) REFERENCES BirthingInstitution(email) ,CONSTRAINT checkExpectedDay CHECK(EXTRACT(day from ExpectedBirth) = 01) ,CONSTRAINT checkmidwives CHECK(PrimaryMidwifeID <> Pregnancy.BackupMidwifeID) ,CONSTRAINT checkfinaldate CHECK(FinalDue = MenstrualDD OR FinalDue = DatingUltraDD) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Baby ( PatientID INT NOT NULL ,PregnancyID INT NOT NULL ,Name VARCHAR(50) ,Gender VARCHAR(10) ,DOB DATE ,TOB TIME ,PRIMARY KEY(PatientID) ,FOREIGN KEY(PatientID) REFERENCES Patient(PatientID) ,FOREIGN KEY(PregnancyID) REFERENCES Pregnancy(PregnancyID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE BirthedAtBirthingCentre ( PregnancyID INT NOT NULL ,BirthingCentreEmail VARCHAR(50) NOT NULL ,PRIMARY KEY(PregnancyID, BirthingCentreEmail) ,FOREIGN KEY(BirthingCentreEmail) REFERENCES BirthingCentre(InstitutionEmail) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Appointment ( AppointmentID INT NOT NULL ,Date DATE NOT NULL ,Time TIME NOT NULL ,PregnancyID INT NOT NULL ,PRIMARY KEY(AppointmentID) ,FOREIGN KEY(PregnancyID) REFERENCES Pregnancy(PregnancyID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE AppointmentSchedules ( PractitionerID INT NOT NULL ,AppointmentID INT NOT NULL ,PRIMARY KEY (PractitionerID,AppointmentID) ,FOREIGN KEY (PractitionerID) REFERENCES Midwife(PractitionerID) ,FOREIGN KEY (AppointmentID) REFERENCES Appointment(AppointmentID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Note ( NoteID INT NOT NULL ,AppointmentID INT NOT NULL ,Date DATE NOT NULL ,Time TIME NOT NULL ,PRIMARY KEY(NoteID, AppointmentID) ,FOREIGN KEY(AppointmentID) REFERENCES Appointment(AppointmentID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Test ( TestID INT NOT NULL ,Type VARCHAR(50) NOT NULL ,Prescribed DATE NOT NULL ,SampleTaken DATE ,LabDone DATE ,Result VARCHAR(50) ,PractitionerID INT NOT NULL ,PRIMARY KEY(TestID) ,FOREIGN KEY(PractitionerID) REFERENCES Midwife(PractitionerID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE TestCompletedFor ( TestID INT NOT NULL ,PatientID INT NOT NULL ,PRIMARY KEY(TestID, PatientID) ,FOREIGN KEY(TestID) REFERENCES Test(TestID) ,FOREIGN KEY(PatientID) REFERENCES Patient(PatientID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE Technician ( TechnicianID INT NOT NULL ,Name VARCHAR(50) NOT NULL ,PhoneNumber VARCHAR(50) NOT NULL ,PRIMARY KEY(TechnicianID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => db2 (cont.) => CREATE TABLE TestCompletedBy ( TestID INT NOT NULL ,TechnicianID INT NOT NULL ,PRIMARY KEY(TestID, TechnicianID) ,FOREIGN KEY(TestID) REFERENCES Test(TestID) ,FOREIGN KEY(TechnicianID) REFERENCES Technician(TechnicianID) )
DB20000I  The SQL command completed successfully.

db2 => db2 => db2 => db2 => db2 => db2 => db2 => 